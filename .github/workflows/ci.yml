name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install LuaJIT and pkg-config
        run: sudo apt-get update && sudo apt-get install -y libluajit-5.1-dev pkg-config && sudo apt-get clean

      - uses: moonrepo/setup-rust@v1
        with:
          components: rustfmt, clippy

      - name: Lint (rustfmt)
        run: cargo fmt --all --check

      - name: Clippy
        run: |
          export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig
          cargo clippy --all-targets --all-features -- -D warnings

      - name: Clean up Rust build artifacts
        run: cargo clean

  build-c-plugins:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install build-essential
        run: sudo apt-get update && sudo apt-get install -y build-essential && sudo apt-get clean

      - name: Build all C plugins
        run: |
          mkdir -p plugins/build
          for src in plugins/*.c; do
            base=$(basename "$src" .c)
            gcc -Iengine -shared -fPIC "$src" -o "plugins/build/lib${base}.so"
          done

      - name: Upload C plugins
        uses: actions/upload-artifact@v4
        with:
          name: c-plugins
          path: plugins/build/*.so

  test-rust:
    runs-on: ubuntu-latest
    needs: [lint, build-c-plugins]
    steps:
      - uses: actions/checkout@v4

      - name: Download C plugins
        uses: actions/download-artifact@v4
        with:
          name: c-plugins
          path: plugins/build

      - name: Install LuaJIT and pkg-config
        run: sudo apt-get update && sudo apt-get install -y libluajit-5.1-dev pkg-config && sudo apt-get clean

      - uses: moonrepo/setup-rust@v1

      - name: Cache cargo registry and git
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Build
        run: |
          export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig
          cargo build --all

      - name: Test (with C plugins)
        run: |
          export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/plugins/build
          cargo test --all

      - name: Clean up Rust build artifacts
        run: cargo clean

  test-lua:
    runs-on: ubuntu-latest
    needs: build-c-plugins
    steps:
      - uses: actions/checkout@v4

      - name: Download C plugins
        uses: actions/download-artifact@v4
        with:
          name: c-plugins
          path: plugins/build

      - name: Install LuaJIT and pkg-config
        run: sudo apt-get update && sudo apt-get install -y libluajit-5.1-dev pkg-config && sudo apt-get clean

      - name: Install Lua
        run: sudo apt-get update && sudo apt-get install -y lua5.1 && sudo apt-get clean

      - name: Lua Tests
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/plugins/build
          ./run_lua_tests.sh

  test-python:
    runs-on: ubuntu-latest
    needs: build-c-plugins
    steps:
      - uses: actions/checkout@v4

      - name: Download C plugins
        uses: actions/download-artifact@v4
        with:
          name: c-plugins
          path: plugins/build

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install maturin pytest

      - name: Build and test Python bindings
        run: |
          source .venv/bin/activate
          cd engine_py
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/../plugins/build
          maturin develop
          pytest

      - name: Clean up Python venv
        run: rm -rf .venv

  check-disk-space:
    runs-on: ubuntu-latest
    steps:
      - name: Show disk usage
        run: df -h
